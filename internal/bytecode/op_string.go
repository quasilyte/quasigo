// Code generated by "stringer -type=Op -trimprefix=Op"; DO NOT EDIT.

package bytecode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpInvalid-0]
	_ = x[OpLoadScalarConst-1]
	_ = x[OpLoadStrConst-2]
	_ = x[OpZero-3]
	_ = x[OpMove-4]
	_ = x[OpMove8-5]
	_ = x[OpMoveResult2-6]
	_ = x[OpNot-7]
	_ = x[OpIsNil-8]
	_ = x[OpIsNotNil-9]
	_ = x[OpIsNilInterface-10]
	_ = x[OpIsNotNilInterface-11]
	_ = x[OpLen-12]
	_ = x[OpCap-13]
	_ = x[OpStrSlice-14]
	_ = x[OpStrSliceFrom-15]
	_ = x[OpStrSliceTo-16]
	_ = x[OpStrIndex-17]
	_ = x[OpSliceIndexScalar8-18]
	_ = x[OpSliceIndexScalar64-19]
	_ = x[OpSliceSetScalar8-20]
	_ = x[OpSliceSetScalar64-21]
	_ = x[OpConcat-22]
	_ = x[OpStrEq-23]
	_ = x[OpStrNotEq-24]
	_ = x[OpStrGt-25]
	_ = x[OpStrLt-26]
	_ = x[OpIntNeg-27]
	_ = x[OpScalarEq-28]
	_ = x[OpScalarNotEq-29]
	_ = x[OpIntGt-30]
	_ = x[OpIntGtEq-31]
	_ = x[OpIntLt-32]
	_ = x[OpIntLtEq-33]
	_ = x[OpIntAdd8-34]
	_ = x[OpIntAdd64-35]
	_ = x[OpIntSub8-36]
	_ = x[OpIntSub64-37]
	_ = x[OpIntMul8-38]
	_ = x[OpIntMul64-39]
	_ = x[OpIntXor-40]
	_ = x[OpIntDiv-41]
	_ = x[OpIntInc-42]
	_ = x[OpIntDec-43]
	_ = x[OpJump-44]
	_ = x[OpJumpZero-45]
	_ = x[OpJumpNotZero-46]
	_ = x[OpJumpTable-47]
	_ = x[OpCall-48]
	_ = x[OpCallRecur-49]
	_ = x[OpCallVoid-50]
	_ = x[OpCallNative-51]
	_ = x[OpCallVoidNative-52]
	_ = x[OpPushVariadicBoolArg-53]
	_ = x[OpPushVariadicScalarArg-54]
	_ = x[OpPushVariadicStrArg-55]
	_ = x[OpPushVariadicInterfaceArg-56]
	_ = x[OpVariadicReset-57]
	_ = x[OpReturnVoid-58]
	_ = x[OpReturnZero-59]
	_ = x[OpReturnOne-60]
	_ = x[OpReturnStr-61]
	_ = x[OpReturnScalar-62]
	_ = x[OpReturn-63]
}

const _Op_name = "InvalidLoadScalarConstLoadStrConstZeroMoveMove8MoveResult2NotIsNilIsNotNilIsNilInterfaceIsNotNilInterfaceLenCapStrSliceStrSliceFromStrSliceToStrIndexSliceIndexScalar8SliceIndexScalar64SliceSetScalar8SliceSetScalar64ConcatStrEqStrNotEqStrGtStrLtIntNegScalarEqScalarNotEqIntGtIntGtEqIntLtIntLtEqIntAdd8IntAdd64IntSub8IntSub64IntMul8IntMul64IntXorIntDivIntIncIntDecJumpJumpZeroJumpNotZeroJumpTableCallCallRecurCallVoidCallNativeCallVoidNativePushVariadicBoolArgPushVariadicScalarArgPushVariadicStrArgPushVariadicInterfaceArgVariadicResetReturnVoidReturnZeroReturnOneReturnStrReturnScalarReturn"

var _Op_index = [...]uint16{0, 7, 22, 34, 38, 42, 47, 58, 61, 66, 74, 88, 105, 108, 111, 119, 131, 141, 149, 166, 184, 199, 215, 221, 226, 234, 239, 244, 250, 258, 269, 274, 281, 286, 293, 300, 308, 315, 323, 330, 338, 344, 350, 356, 362, 366, 374, 385, 394, 398, 407, 415, 425, 439, 458, 479, 497, 521, 534, 544, 554, 563, 572, 584, 590}

func (i Op) String() string {
	if i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
